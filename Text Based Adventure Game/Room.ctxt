#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ A\ room\ also\ stores\ collections\ of\ enemies,\ prisoners,\ and\ items\ within\ it\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\ and\ Ahmer\ Alam\r\n\ @version\ 2016.02.29\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ No\ exits.\ "description"\ is\ something\ like\ "inside\ the\ cafeteria"\ or\r\n\ "inside\ the\ prison\ corridor".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=ID
comment10.target=Prisoner\ getPrisoner(java.lang.String)
comment10.text=\r\n\ Get\ the\ prisoner\ object,\ given\ its\ ID\r\n\ @param\ ID\ the\ prisoner\ ID\r\n\ @return\ The\ person\ who\ identifies\ with\ the\ ID\ number\r\n
comment11.params=
comment11.target=java.util.ArrayList\ returnAndRemoveAllPrisoners()
comment11.text=\r\n\ Get\ all\ prisoners\ inside\ the\ room,\ and\ empty\ the\ collection\ of\ prisoners\r\n\ @return\ All\ of\ the\ prisoners\ inside\ the\ room\ (before\ emptied)\r\n
comment12.params=prisoner
comment12.target=void\ removePrisoner(Prisoner)
comment12.text=\ \r\n\ Remove\ a\ prisoner\ from\ the\ room\r\n\ @param\ prisoner\ The\ prisoner\ object\ to\ be\ removed\r\n
comment13.params=enemy
comment13.target=void\ setEnemy(Enemy)
comment13.text=\r\n\ Add\ an\ enemy\ (guard/warden)\ to\ the\ collection\ of\ enemies\r\n\ @param\ enemy\ The\ enemy\ object\ to\ be\ added\r\n
comment14.params=
comment14.target=Enemy\ getEnemy()
comment14.text=\r\n\ Get\ any\ enemy\ (in\ this\ case\ the\ first\ enemy)\ from\ the\ collection\ of\ enemies\r\n\ @return\ An\ enemy\ object\ from\ the\ collection\ of\ enemies\r\n
comment15.params=enemy
comment15.target=void\ removeEnemy(Enemy)
comment15.text=\r\n\ Remove\ an\ enemy\ object\ from\ the\ collection\ of\ enemies\r\n\ @param\ enemy\ The\ enemy\ object\ to\ be\ removed\r\n
comment16.params=enemyType
comment16.target=int\ getEnemyTypeQuantity(java.lang.String)
comment16.text=\r\n\ Given\ a\ type\ of\ enemy,\ return\ the\ number\ of\ enemies\ inside\r\n\ The\ room\ which\ are\ of\ the\ given\ type\ \r\n\ @return\ The\ quantity\ of\ enemies\ of\ the\ inputted\ type\ \r\n
comment17.params=
comment17.target=int\ getTotalEnemyHealth()
comment17.text=\r\n\ Get\ the\ total\ HP\ of\ enemies\ inside\ the\ room\r\n\ @return\ The\ total\ HP\ of\ enemies\ inside\ the\ room\r\n
comment18.params=item
comment18.target=void\ setItem(Item)
comment18.text=\r\n\ Add\ an\ item\ to\ the\ collection\ of\ items\r\n\ @param\ item\ The\ item\ object\ to\ be\ added\r\n
comment19.params=name
comment19.target=Item\ getItem(java.lang.String)
comment19.text=\r\n\ Get\ the\ item\ object,\ given\ its\ name\r\n\ @param\ name\ The\ name\ of\ the\ item\r\n\ @return\ The\ item\ which\ identifies\ with\ the\ name\r\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment20.params=item
comment20.target=void\ removeItem(Item)
comment20.text=\ Remove\ an\ item\ from\ the\ collection\ of\ items\r\n\ \ @param\ item\ The\ item\ object\ to\ be\ removed\r\n
comment3.params=
comment3.target=java.lang.String\ getShortDescription()
comment3.text=\r\n\ Return\ the\ field\ 'description'\ of\ the\ room\ only\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n
comment4.params=
comment4.target=java.lang.String\ getLongDescription()
comment4.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Room\ exits\:\ north\ west\r\n\ \ \ \ \ Room\ prisoners\:\ A331\r\n\ \ \ \ \ Room\ items\:\ knife(3)\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment5.params=
comment5.target=java.lang.String\ getExitString()
comment5.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Room\ exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment6.params=
comment6.target=java.lang.String\ getPrisonerString()
comment6.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ prisoners,\ for\ example\r\n\ "Room\ prisoners\:\ A331\ D143".\r\n\ @return\ Details\ of\ the\ room's\ exits\r\n
comment7.params=
comment7.target=java.lang.String\ getItemString()
comment7.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ items\ and\ their\ weights,\ for\ example\r\n\ "Room\ items\:\ knife(3)\ key(10)".\r\n\ @return\ Details\ of\ the\ room's\ items.\r\n
comment8.params=direction
comment8.target=Room\ getExit(java.lang.String)
comment8.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment9.params=prisoner
comment9.target=void\ setPrisoner(Prisoner)
comment9.text=\r\n\ Add\ a\ prisoner\ to\ the\ collection\ of\ prisoners\r\n\ @param\ prisoner\ The\ prisoner\ object\ to\ be\ added\r\n
numComments=21
