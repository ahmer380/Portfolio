#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ \ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\r\n\ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ characters,\ items,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ \r\n\ \ It\ also\ records\ a\ log\ of\ all\ the\ rooms\ the\ player\ has\ visited\ \r\n\ \ It\ also\ evaluates\ and\ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\ and\ Ahmer\ Alam\r\n\ @version\ 2016.02.29\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ characters,\ items\ and\ internal\ map.\r\n
comment10.params=nextRoom
comment10.target=void\ processNextRoom(Room)
comment10.text=\ \r\n\ Performs\ a\ sequence\ of\ processes\ whenever\ the\ player\ is\ transferring\ to\ another\ room\r\n\ Whether\ it\ is\ by\ the\ player\ using\ the\ go\ command,\ back\ command\ or\ otherwise\r\n\ Depending\ on\ the\ what\ the\ next\ room\ is\r\n\ Also\ checks\ if\ the\ next\ room\ contains\ any\ enemies\r\n\ @param\ nextRoom\ A\ room\ which\ the\ user\ will\ visit\ next\ \r\n
comment11.params=
comment11.target=void\ movePrisoners()
comment11.text=\r\n\ For\ each\ prisoner\ in\ each\ room,\ move\ the\ prisoner\ to\ another\r\n\ Random\ valid\ room\ (deduced\ from\ the\ 'locations'\ field\ in\ the\ prisoner\ class)\r\n
comment12.params=
comment12.target=void\ processGuardEncounter()
comment12.text=\r\n\ Ends\ the\ game\ if\ the\ player\ does\ not\ have\ sufficient\ weapons\ to\ eliminate\ the\ enemies\r\n\ Otherwise,\ the\ game\ deletes\ the\ enemies\ from\ the\ room\ and\ the\ weapon\ items\ used\ to\ \r\n\ Eliminate\ the\ enemies\r\n
comment13.params=
comment13.target=void\ processTeleporterRoom()
comment13.text=\r\n\ If\ the\ player\ is\ currently\ in\ the\ teleporter\ room\r\n\ Visit\ any\ other\ room\ in\ the\ game\r\n
comment14.params=
comment14.target=void\ processOutsideRoom()
comment14.text=\r\n\ If\ the\ player\ is\ in\ the\ 'outside'\ room,\ then\ he/she\ has\ won\ and\ the\ game\ ends\r\n
comment15.params=command
comment15.target=void\ goRoom(Command)
comment15.text=\ \r\n\ "go"\ was\ entered.\ Try\ to\ go\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ Room,\ otherwise\ print\ an\ error\ message.\r\n\ @param\ command\ The\ command\ which\ includes\ the\ direction\ the\ player\ wants\ to\ go\r\n
comment16.params=
comment16.target=void\ back()
comment16.text=\r\n\ "back"\ was\ entered.\ Check\ whether\ there\ is\ such\ room\ available\r\n\ To\ re-visit,\ and\ do\ so\ if\ true\r\n
comment17.params=command
comment17.target=void\ talk(Command)
comment17.text=\r\n\ "talk"\ was\ entered.\ Search\ if\ the\ second\ word\ (if\ given)\ is\ an\ ID\ of\ a\r\n\ Prisoner\ located\ in\ the\ current\ room,\ and\ if\ so,\ exhaust\ their\ current\ dialogue\r\n\ @param\ command\ The\ command\ which\ includes\ who\ the\ player\ would\ like\ to\ speak\ to\r\n
comment18.params=command
comment18.target=void\ takeItem(Command)
comment18.text=\r\n\ "take"\ was\ entered.\ Check\ if\ the\ second\ word\ (if\ given)\ is\ an\ existing\ item\ inside\r\n\ The\ current\ room\ and,\ if\ the\ player\ has\ sufficient\ inventory\ space,\ transfer\ the\ item\ to\ the\ player's\ inventory\r\n\ @param\ command\ The\ command\ which\ includes\ the\ item\ the\ player\ would\ like\ to\ take\r\n
comment19.params=command
comment19.target=void\ scanEnemies(Command)
comment19.text=\r\n\ "scan"\ was\ entered.\ Check\ that\ the\ second\ and\ third\ words\ have\ been\ entered\r\n\ And\ that\ the\ third\ word\ is\ an\ existing\ exit\ for\ the\ current\ room\ \r\n\ And\ if\ so,\ scan\ all\ enemies\ in\ that\ direction\ of\ the\ type\ indicated\ by\ the\ second\ word\r\n\ @param\ command\ The\ command\ which\ includes\ the\ enemyType\ and\ direction\ the\ player\ would\ like\ to\ scan\ for\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment20.params=command
comment20.target=void\ feedPrisoner(Command)
comment20.text=\r\n"feed"\ was\ entered.\ Check\ that\ the\ second\ and\ third\ words\ have\ been\ entered\r\n\ And\ that\ the\ second\ word\ is\ the\ ID\ an\ existing\ prisoner\ currently\ inside\ the\ current\ room\ \r\n\ And\ that\ the\ third\ word\ is\ an\ edible\ item\ inside\ the\ player's\ inventory\r\n\ And\ if\ so,\ feed\ the\ specified\ prisoner\ the\ specified\ food\ item\r\n\ @param\ command\ The\ command\ which\ includes\ the\ prisonerID\ and\ food\ the\ player\ would\ like\ feed\r\n
comment21.params=command
comment21.target=void\ dropItem(Command)
comment21.text=\r\n\ "drop"\ was\ entered.\ Check\ if\ the\ second\ word\ (if\ given)\ is\ an\ item\ inside\r\n\ The\ player's\ inventory,\ and\ if\ so,\ transfer\ the\ item\ to\ the\ current\ room\r\n\ @param\ command\ The\ command\ which\ includes\ the\ item\ the\ player\ would\ like\ to\ drop\r\n
comment22.params=
comment22.target=void\ unlockCellExit()
comment22.text=\r\n\ "UNLOCK"\ was\ entered.\ If\ the\ key\ is\ inside\ the\ player's\ inventory\ and\ the\ player\r\n\ Is\ currently\ inside\ his\ jail\ cell,\ unlock\ a\ new\ exit\ to\ the\ outside\ room\r\n\ (thus\ resulting\ in\ escape)\r\n
comment23.params=command
comment23.target=void\ quit(Command)
comment23.text=\ \r\n\ "quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game\ and\ if\ so,\ end\ the\ game\r\n
comment3.params=
comment3.target=void\ createCharacters()
comment3.text=\r\n\ Create\ all\ characters\ inside\ the\ game\ and\ locate\ them\ to\ their\ respective\ rooms\r\n\ Prisoners\ \=\ Friendly\ characters\r\n\ Guards/wardens\ \=\ Enemy\ characters\r\n
comment4.params=
comment4.target=void\ createItems()
comment4.text=\r\n\ Create\ all\ items\ inside\ the\ game\ and\ locate\ them\ to\ their\ respective\ rooms\r\n
comment5.params=
comment5.target=void\ play()
comment5.text=\r\n\ Main\ play\ routine.\ Loops\ until\ end\ of\ play.\r\n
comment6.params=
comment6.target=void\ printWelcome()
comment6.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment7.params=command
comment7.target=void\ processCommand(Command)
comment7.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n
comment8.params=
comment8.target=void\ printHelp()
comment8.text=\r\n\ Print\ out\ some\ help\ information\ includingthe\ mechanics\ of\ the\ game\r\n\ And\ the\ commands\ words\ availalble\ for\ the\ player\r\n
comment9.params=
comment9.target=void\ printStatus()
comment9.text=\r\n\ Print\ out\ information\ regarding\ the\ current\ state\ of\ the\ game\r\n\ Including\ the\ state\ of\ the\ player\ and\ the\ current\ room\ the\ player\ is\ inside\r\n
numComments=24
