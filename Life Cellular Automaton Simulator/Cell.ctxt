#BlueJ class context
comment0.target=Cell
comment0.text=\r\n\ A\ class\ representing\ the\ shared\ characteristics\ of\ all\ forms\ of\ life\r\n\r\n\ @author\ David\ J.\ Barnes,\ Michael\ K\u00F6lling\ &\ Jeffery\ Raphael\r\n\ @version\ 2022.01.06\r\n
comment1.params=field\ location\ defaultColour
comment1.target=Cell(Field,\ Location,\ java.awt.Color)
comment1.text=\r\n\ Create\ a\ new\ cell\ at\ location\ in\ field.\r\n\r\n\ @param\ field\ The\ field\ currently\ occupied.\r\n\ @param\ location\ The\ location\ within\ the\ field.\r\n\ @param\ defaultColour\ the\ default\ color\ of\ the\ cell.\r\n
comment10.params=
comment10.target=void\ updateState()
comment10.text=\r\n\ Changes\ the\ state\ of\ the\ cell\r\n
comment11.params=col
comment11.target=void\ setColor(java.awt.Color)
comment11.text=\r\n\ Changes\ the\ color\ of\ the\ cell\r\n\ @param\ col\ colour\ to\ be\ set\ to\r\n
comment12.params=
comment12.target=java.awt.Color\ getColor()
comment12.text=\r\n\ Returns\ the\ cell's\ color\r\n
comment13.params=
comment13.target=Location\ getLocation()
comment13.text=\r\n\ Return\ the\ cell's\ location.\r\n\ @return\ The\ cell's\ location.\r\n
comment14.params=location
comment14.target=void\ setLocation(Location)
comment14.text=\r\n\ Place\ the\ cell\ at\ the\ new\ location\ in\ the\ given\ field.\r\n\ @param\ location\ The\ cell's\ location.\r\n
comment15.params=
comment15.target=Field\ getField()
comment15.text=\r\n\ Return\ the\ cell's\ field.\r\n\ @return\ The\ cell's\ field.\r\n
comment16.params=
comment16.target=void\ setAge()
comment16.text=\r\n\ Set\ the\ age\ of\ a\ cell\ to\ 0\r\n
comment17.params=
comment17.target=int\ getAge()
comment17.text=\r\n\ Return\ the\ amount\ of\ generations\ a\ cell\ has\ lived\r\n\ @return\ the\ amount\ of\ generations\ a\ cell\ has\ lived\r\n
comment18.params=
comment18.target=boolean\ isInfected()
comment18.text=\r\n\ Checks\ whether\ or\ not\ the\ cell\ is\ infected\r\n\ @return\ true\ if\ the\ cell\ is\ infected\r\n
comment19.params=
comment19.target=void\ setInfected()
comment19.text=\r\n\ Sets\ a\ cell\ to\ be\ infected\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Make\ this\ cell\ act\ -\ that\ is\:\ the\ cell\ decides\ it's\ status\ in\ the\ next\ generation\r\n\ This\ super\ method\ consists\ of\ actions\ required\ to\ be\ checked\ by\ all\ cells\ (except\ the\ creeper)\r\n\ Called\ by\ all\ cells\ except\ the\ Creeper\ (therefore\ creeper\ is\ immune\ to\ the\ disease)\r\n\ If\ stateDetermined\ \=\ true,\ the\ cell's\ state\ is\ definately\ determined\r\n\ Else,\ the\ cell\ still\ needs\ to\ be\ determined\ (by\ its\ own\ conditions),\ may\ still\ be\ dead/alive\r\n\ Order\ of\ precedence\:\ creeper,\ infected,\ cell-specific\ rules\r\n
comment20.params=
comment20.target=boolean\ isNextInfected()
comment20.text=\r\n\ Checks\ whether\ or\ not\ a\ cell\ gets\ infected\ in\ the\ next\ generation\r\n\ @return\ true\ if\ a\ cell\ is\ infected\ in\ the\ next\ generation\r\n
comment21.params=
comment21.target=void\ setNeighbours()
comment21.text=\r\n\ Sets\ the\ neighbours\ list\ to\ all\ of\ the\ cells\ neighbours\r\n
comment22.params=
comment22.target=java.util.List\ getNeighbours()
comment22.text=\r\n\ Just\ returns\ the\ attribute\r\n\ @return\ the\ attribute\ of\ a\ neighbour\r\n
comment23.params=
comment23.target=boolean\ isStateDetermined()
comment23.text=\r\n\ Checks\ whether\ or\ not\ the\ cells\ state\ has\ been\ determined\r\n\ @return\ true\ if\ cells\ state\ has\ been\ determined\r\n
comment3.params=
comment3.target=void\ actIfInfected()
comment3.text=\r\n\ Changes\ the\ behaviour\ of\ all\ cells\ that\ have\ been\ infected\ by\ the\ disease.\r\n
comment4.params=
comment4.target=boolean\ canBecomeInfected()
comment4.text=\r\n\ A\ cell\ can\ only\ become\ infected\ if\ adjacent\ to\ another\ infected\ cell\ AND\ alive\ AND\ before\ they\ experience\ symptoms\r\n\ @return\ true\ if\ it\ is\ possible\ for\ the\ cell\ to\ become\ infected\ trhough\ one\ of\ its\ neighbours\r\n
comment5.params=
comment5.target=boolean\ aggroCreeperSearch()
comment5.text=\r\n\ Search\ if\ any\ neighbour\ is\ an\ active\ creeper\r\n\ @return\ true\ if\ a\ neighbour\ is\ a\ creeper\ cell\ in\ its\ aggro\ state\r\n
comment6.params=cellType
comment6.target=int\ cellSearchQuantity(java.lang.Class)
comment6.text=\r\n\ Search\ if\ any\ neighbour\ is\ of\ a\ certain\ type\r\n\ CellType\ needs\ to\ be\ in\ the\ form\ of\ Creeper.class\ etc.\r\n\ @param\ cellType\ specified\ cell\ type.\r\n\ @return\ the\ amount\ of\ neighbours\ of\ a\ specified\ cell\ type\r\n
comment7.params=
comment7.target=boolean\ isAlive()
comment7.text=\r\n\ Check\ whether\ the\ cell\ is\ alive\ or\ not.\r\n\ @return\ true\ if\ the\ cell\ is\ still\ alive.\r\n
comment8.params=
comment8.target=void\ setDead()
comment8.text=\r\n\ Indicate\ that\ the\ cell\ is\ no\ longer\ alive.\r\n
comment9.params=value
comment9.target=void\ setNextState(boolean)
comment9.text=\r\n\ Indicate\ that\ the\ cell\ will\ be\ alive\ or\ dead\ in\ the\ next\ generation.\r\n\ @param\ value\ true\ if\ cell\ will\ be\ alive\ in\ the\ next\ generation.\r\n
numComments=24
